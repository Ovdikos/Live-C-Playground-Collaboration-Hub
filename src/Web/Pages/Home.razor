@page "/"
@inject UserState UserState
@inject NavigationManager Nav

@if (!UserState.IsAuthenticated)
{
    Nav.NavigateTo("/login", true);
}
else
{
    <div style="
        position: fixed;
        top: 24px;
        right: 40px;
        z-index: 1001;
        background: rgba(0,255,224,0.76);
        box-shadow: 0 4px 32px rgba(0,0,0,0.07);
        border-radius: 2rem;
        padding: 0.5rem 1.3rem 0.5rem 0.7rem;
        display: flex;
        align-items: center;
        gap: 1.1rem;
        min-width: 230px;
    ">
        <img src="@($"/avatars/{UserState.User?.AvatarFileName ?? "default_avatar.png"}")"
             class="rounded-circle" style="width:48px;height:48px;object-fit:cover;" />
        <span class="fw-semibold" style="font-size:1.25rem;">@UserState.User?.Username</span>
        <button class="btn btn-outline-danger btn-sm" style="margin-left:0.5rem;" @onclick="Logout">Exit</button>
    </div>

    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height:60vh;">
        <h1 class="mb-4 mt-3">Welcome, @UserState.User?.Username!</h1>
        <div class="d-flex gap-4">
            <button class="btn btn-primary btn-lg" @onclick="@(()=>Nav.NavigateTo("/snippets"))">Go to Snippets</button>
            <button class="btn btn-outline-primary btn-lg" @onclick="@(()=>Nav.NavigateTo("/sessions"))">Go to Sessions</button>
        </div>
    </div>
}

@code {
    private void Logout()
    {
        UserState.Logout();
        Nav.NavigateTo("/login", true);
    }
}


