@page "/"
@inject UserState UserState
@inject NavigationManager Nav

@if (!isLoaded)
{
    <div style="margin-top:50px; text-align:center;">
        <span>Loading...</span>
    </div>
}
else if (!UserState.IsAuthenticated)
{
    Nav.NavigateTo("/login", true);
}
else
{
    <div class="userbar-container">
        <img src="@($"/avatars/{UserState.User?.AvatarFileName ?? "default_avatar.png"}")"
             class="rounded-circle" style="width:48px;height:48px;object-fit:cover;" />
        <span class="fw-semibold profile-link" @onclick="GoToProfile" style="cursor:pointer;">@UserState.User?.Username</span>

        <button class="btn btn-outline-danger btn-sm" style="margin-left:0.5rem;" @onclick="Logout">Exit</button>
    </div>

    <div class="d-flex flex-column align-items-center justify-content-center" style="min-height:60vh;">
        <h1 class="mb-4 mt-3">Welcome, @UserState.User?.Username!</h1>
        <div class="d-flex gap-4">
            <button class="btn btn-primary btn-lg" @onclick="@(()=>Nav.NavigateTo("/snippets"))">Go to Snippets</button>
            <button class="btn btn-outline-primary btn-lg" @onclick="@(()=>Nav.NavigateTo("/sessions"))">Go to Sessions</button>
        </div>
    </div>
}

@code {
    private bool isLoaded = false;
    private bool initialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!initialized)
        {
            initialized = true;
            await UserState.InitializeAsync();
            isLoaded = true;
            StateHasChanged(); 
        }
    }
    
    private void GoToProfile()
    {
        Nav.NavigateTo("/user/profile");
    }


    private async Task Logout()
    {
        await UserState.LogoutAsync();
        Nav.NavigateTo("/login", true);
    }
}