@page "/"
@using Web.AuthService
@inject UserState UserState
@inject NavigationManager Nav

@if (!_isLoaded)
{
    <div class="home-loading">
        <span>Loading...</span>
    </div>
}
else if (!UserState.IsAuthenticated)
{
    Nav.NavigateTo("/login", true);
}
else
{
    <div class="userbar">
        <img src="@($"/avatars/{UserState.User?.AvatarFileName ?? "default_avatar.png"}")"
             class="userbar-avatar" />
        <span class="userbar-username" @onclick="GoToProfile">@UserState.User?.Username</span>

        @if (UserState.User?.IsAdmin == true)
        {
            <button class="userbar-admin-btn" @onclick="@(()=>Nav.NavigateTo("/admin"))">Admin Panel</button>
        }

        <button class="userbar-logout-btn" @onclick="Logout">Exit</button>
    </div>

    <div class="home-center">
        <h1 class="home-welcome-title">Welcome, @UserState.User?.Username!</h1>
        <div class="home-actions">
            <button class="home-action-btn btn btn-primary" @onclick="@(()=>Nav.NavigateTo("/snippets"))">Go to Snippets</button>
            <button class="home-action-btn btn btn-outline-primary" @onclick="@(()=>Nav.NavigateTo("/sessions"))">Go to Sessions</button>
        </div>
    </div>
}

@code {
    private bool _isLoaded = false;
    private bool _initialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_initialized)
        {
            _initialized = true;
            await UserState.InitializeAsync();
            _isLoaded = true;
            StateHasChanged(); 
        }
    }
    
    private void GoToProfile()
    {
        Nav.NavigateTo("/user/profile");
    }

    private async Task Logout()
    {
        await UserState.LogoutAsync();
        Nav.NavigateTo("/login", true);
    }
}