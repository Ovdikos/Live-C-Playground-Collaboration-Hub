@page "/snippets/{Id:guid}"
@inject HttpClient Http
@inject UserState UserState

@using Application.DTOs
@using Application.DTOs.SnippetsDtos
@using Web.AuthService

@code {
    [Parameter]
    public Guid Id { get; set; }

    private SnippetDto? _snippet;
    private string? _error;
    private bool _initialized = false;
    private bool _isLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_initialized)
        {
            _initialized = true;
            await UserState.InitializeAsync();
            try
            {
                _snippet = await Http.GetFromJsonAsync<SnippetDto>($"/api/snippets/{Id}");
                if (_snippet == null)
                    _error = "Snippet not found!";
            }
            catch
            {
                _error = "Failed to load snippet.";
            }

            _isLoaded = true;
            StateHasChanged();
        }
    }
}

@if (_error != null)
{
    <div class="snippet-details-error alert alert-danger">@_error</div>
}
else if (_snippet == null)
{
    <div class="snippet-details-loading">Loading...</div>
}
else
{
    <div class="snippet-details-card card mt-3">
        <div class="snippet-details-body card-body">
            <h2 class="snippet-details-title">@_snippet.Title</h2>
            <div class="snippet-details-content mb-3">
                <pre class="snippet-details-pre bg-light rounded p-2" style="max-width:100%; overflow-x:auto;">@_snippet.Content</pre>
            </div>
            <div class="snippet-details-meta">
                <div><b>Owner:</b> @_snippet.OwnerName</div>
                <div><b>Created:</b> @_snippet.CreatedAt.ToString("g")</div>
                <div><b>Last updated:</b> @_snippet.UpdatedAt.ToString("g")</div>
                <div><b>Public:</b> @(_snippet.IsPublic ? "Yes" : "No")</div>
            </div>
        </div>
    </div>
}